//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace practic3.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Employee
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Employee()
        {
            this.Equipment = new HashSet<Equipment>();
            this.Furniture = new HashSet<Furniture>();
            this.User = new HashSet<User>();
            this.Workers_on_order = new HashSet<Workers_on_order>();
        }
    
        public long ID { get; set; }

        [Required]
        [StringLength(20, MinimumLength = 2, ErrorMessage = "Длина имени должна быть от 2 до 20 символов")]
        public string First_name { get; set; }

        [Required]
        [StringLength(20, MinimumLength = 2, ErrorMessage = "Длина фамилии должна быть от 2 до 20 символов")]
        public string Last_name { get; set; }

        public string Midle_name { get; set; }

        [Required]
        [DataType(DataType.Date, ErrorMessage = "Дата рождения должна иметь правильный вид dd.mm.yyyy")]
        public System.DateTime Born_date { get; set; }

        [Required]
        public long Position_at_work { get; set; }

        [Required]
        [Range(0, double.MaxValue, ErrorMessage = "Заработная плата не может быть отрицательной")]
        public decimal Wages { get; set; }

        [Required]
        [Range(1000, 9999, ErrorMessage = "Серия паспорта находится в диппазоне от 1000 до 9999")]
        public decimal Passport_serial { get; set; }

        [Required]
        [Range(100000, 999999, ErrorMessage = "Номер паспорта находится в диппазоне от 100000 до 999999")]
        public decimal Passport_number { get; set; }

        [Required]
        public string Registration { get; set; }

        public string E_mail { get; set; }

        [Required]
        [StringLength(15, ErrorMessage = "Длина номера телефона должна быть не более 15 символов")]
        public string Phone_number { get; set; }

        [Required]
        public long Gender { get; set; }

        public virtual Job_title Job_title { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Equipment> Equipment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Furniture> Furniture { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<User> User { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Workers_on_order> Workers_on_order { get; set; }
        public virtual Gender Gender1 { get; set; }
    }
}
